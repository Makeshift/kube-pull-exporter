# Default values for exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: "monitoring"
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "kube-pull-exporter"

rbac:
  create: true
  clusterRoleBinding:
    roleRef:
      kind: ClusterRole
  clusterRole:
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - events
        verbs:
          - get
          - list
          - watch

exporter:
  image:
    repository: unitrade23/kube-pull-exporter
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  ports:
    - name: api
      port: 8080
  # Annotations to be added to the deployment
  annotations: {}
  # deployment strategy, set to standard k8s default
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  terminationGracePeriodSeconds: ""
  podSecurityContext: {}
  # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  probe:
    readiness:
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
    liveness:
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
  env:
    []
    # - name: SERVER_PORT
    #   value: 8080
    # - name: METRICS_PATH
    #   value: /metrics
  extraArgs:
    {}
    # http.pathPrefix: api
    # namespaces: "default"
    # interval: "3m"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 30m
      memory: 50Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
