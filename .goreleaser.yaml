# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      # - windows
      # - darwin

dockers:
  - image_templates:
      - "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}-amd64"
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"
  - image_templates:
      - "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}-arm64v8"
    use: buildx
    goarch: arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64/v8"

docker_manifests:
  - name_template: "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}"
    image_templates:
      - "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}-amd64"
      - "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}-arm64v8"
  - name_template: "ghcr.io/makeshift/kube-pull-exporter:latest"
    image_templates:
      - "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}-amd64"
      - "ghcr.io/makeshift/kube-pull-exporter:{{ .Version }}-arm64v8"

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]
